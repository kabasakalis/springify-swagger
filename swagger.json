{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Springify API",
    "description": "TODO: Add Description",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "http://localhost:8080",
      "scopes": {},
      "x-skip-client-authentication": false
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/artists/1": {
      "get": {
        "description": "\n",
        "summary": "Get Artist",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtists1001Get",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/artists/1"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Artist",
            "x-testDescription": "\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/genres/1": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get One Genre",
        "tags": [
          "Genres"
        ],
        "operationId": "ApiGenres1Get",
        "produces": [
          "application/hal+json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/genres/1"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get One Genre",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/genres": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get All Genres",
        "tags": [
          "Genres"
        ],
        "operationId": "ApiGenresGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/genres"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get All Genres",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "TODO: Add Description",
        "summary": "Add One Genre",
        "tags": [
          "Genres"
        ],
        "operationId": "ApiGenresPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddOneGenrerequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/api/genres",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\"name\": \"PsyTrance\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add One Genre",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/albums/1/artist": {
      "get": {
        "description": "",
        "summary": "Get Album Artist",
        "tags": [
          "Albums"
        ],
        "operationId": "ApiAlbums1ArtistGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/albums/1/artist",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Album Artist",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/albums/1": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get One Album",
        "tags": [
          "Albums"
        ],
        "operationId": "ApiAlbums1Get",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/albums/1"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get One Album",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api": {
      "get": {
        "description": "Home",
        "summary": "Root",
        "tags": [
          "Misc"
        ],
        "operationId": "ApiGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Root",
            "x-testDescription": "Home"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/roles/3/users": {
      "get": {
        "description": "",
        "summary": "Get  Users With This Role",
        "tags": [
          "Roles"
        ],
        "operationId": "ApiRoles3UsersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/roles/3/users"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get  Users With This Role",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/users/1/roles": {
      "get": {
        "description": "",
        "summary": "Get User Roles",
        "tags": [
          "Users"
        ],
        "operationId": "ApiUsers1RolesGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/users/1/roles"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get User Roles",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/users/1": {
      "get": {
        "description": "",
        "summary": "Get One User",
        "tags": [
          "Users"
        ],
        "operationId": "ApiUsers1Get",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/users/1"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get One User",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/users": {
      "get": {
        "description": "",
        "summary": "Get Users",
        "tags": [
          "Users"
        ],
        "operationId": "ApiUsersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/users"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Users",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/playlists/4": {
      "get": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Get  One Playlist",
        "tags": [
          "Playlists"
        ],
        "operationId": "ApiPlaylists4Get",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/playlists/4"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get  One Playlist",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/playlists": {
      "get": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Get Playlists",
        "tags": [
          "Playlists"
        ],
        "operationId": "ApiPlaylistsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/playlists"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Playlists",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Add One Playlist",
        "tags": [
          "Playlists"
        ],
        "operationId": "ApiPlaylistsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddOnePlaylistrequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/api/playlists",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{ \"name\": \"Top Albania\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add One Playlist",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/artists/1/genre": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Artist Genre",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtists1GenreGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/artists/1/genre"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Artist Genre",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/artists/30/albums": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Artist Albums",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtists30AlbumsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/artists/30/albums"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Artist Albums",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/artists": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Artists",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtistsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/artists"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Artists",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Add Artist",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtistsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddArtistrequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/api/artists",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\n\"name\": \"Vio-lence\",\n\"country\": \"USA\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Artist",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/albums": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get All Albums",
        "tags": [
          "Albums"
        ],
        "operationId": "ApiAlbumsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/albums?page=0&size=10"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get All Albums",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "TODO: Add Description",
        "summary": "Add One Album",
        "tags": [
          "Albums"
        ],
        "operationId": "ApiAlbumsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddOneAlbumrequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/api/albums",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\"title\": \"Rockstar\",\n\"year\": \"2017\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add One Album",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/albums/10": {
      "patch": {
        "description": "TODO: Add Description",
        "summary": "Update One Album",
        "tags": [
          "Albums"
        ],
        "operationId": "ApiAlbums10Patch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateOneAlbumrequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PATCH",
              "uri": "/api/albums/10",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\"title\": \"Rockstar_Updated\",\n\"year\": \"2020\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Update One Album",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/albums/10000": {
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Delete One Album",
        "tags": [
          "Albums"
        ],
        "operationId": "ApiAlbums10000Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/api/albums/10000",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete One Album",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/albums/3/playlists": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Album Playlists",
        "tags": [
          "Albums"
        ],
        "operationId": "ApiAlbums3PlaylistsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/albums/3/playlists?page=0&size=10",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Album Playlists",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/albums/1/playlists": {
      "put": {
        "description": "",
        "summary": "Add Playlists to Album",
        "tags": [
          "Albums"
        ],
        "operationId": "ApiAlbums1PlaylistsPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/api/albums/1/playlists",
              "headers": {
                "Accept": "application/hal+json;charset=UTF-8",
                "Content-Type": "text/uri-list"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Playlists to Album",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/albums/18/playlists/10001": {
      "delete": {
        "description": "",
        "summary": "Delete Album-Playlist Association",
        "tags": [
          "Albums"
        ],
        "operationId": "ApiAlbums18Playlists10001Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/api/albums/18/playlists/10001",
              "headers": {
                "Accept": "application/hal+json;charset=UTF-8",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete Album-Playlist Association",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/genres/100": {
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Delete One Genre",
        "tags": [
          "Genres"
        ],
        "operationId": "ApiGenres100Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/api/genres/100",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete One Genre",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "TODO: Add Description",
        "summary": "Update One Genre",
        "tags": [
          "Genres"
        ],
        "operationId": "ApiGenres100Patch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateOneGenrerequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PATCH",
              "uri": "/api/genres/100",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\"name\": \"PsyTrance KOKO\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Update One Genre",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/genres/1/artists/38": {
      "delete": {
        "description": "",
        "summary": "Delete Genre-Artist Association",
        "tags": [
          "Genres"
        ],
        "operationId": "ApiGenres1Artists38Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/api/genres/1/artists/38",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete Genre-Artist Association",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/genres/6/artists": {
      "put": {
        "description": "TODO: Add Description",
        "summary": "Add Artists  to Genre",
        "tags": [
          "Genres"
        ],
        "operationId": "ApiGenres6ArtistsPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/api/genres/6/artists",
              "headers": {
                "Accept": "application/hal+json;charset=UTF-8",
                "Content-Type": "text/uri-list"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Artists  to Genre",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/genres/3/artists": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Genre Artists",
        "tags": [
          "Genres"
        ],
        "operationId": "ApiGenres3ArtistsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/genres/3/artists?page=0&size=10",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Genre Artists",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/artists/38": {
      "delete": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Delete Artist",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtists38Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/api/artists/38",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete Artist",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Update Artist",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtists38Patch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateArtistrequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PATCH",
              "uri": "/api/artists/38",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\n\"name\": \"Vio-lence _____\",\n\"country\": \"USA _____\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Update Artist",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/artists/findByCountry": {
      "get": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Get Artists By Country",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtistsFindByCountryGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/artists/findByCountry?country=USA"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Artists By Country",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/artists/findByName": {
      "get": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Get Artists By Name",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtistsFindByNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/artists/findByName?name=KI"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Artists By Name",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/artists/1/albums": {
      "put": {
        "description": "TODO: Add Description",
        "summary": "Add Albums to Artist",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtists1AlbumsPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/api/artists/1/albums",
              "headers": {
                "Accept": "application/hal+json;charset=UTF-8",
                "Content-Type": "text/uri-list"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Albums to Artist",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/artists/18/albums/10001": {
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Delete Album-Artist Association",
        "tags": [
          "Artists"
        ],
        "operationId": "ApiArtists18Albums10001Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/api/artists/18/albums/10001",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete Album-Artist Association",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/playlists/6": {
      "patch": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Update One Playlist",
        "tags": [
          "Playlists"
        ],
        "operationId": "ApiPlaylists6Patch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateOnePlaylistrequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PATCH",
              "uri": "/api/playlists/6",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{ \"name\": \"Top Bulgaria\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Update One Playlist",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/playlists/100": {
      "delete": {
        "description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.",
        "summary": "Delete One Playlist",
        "tags": [
          "Playlists"
        ],
        "operationId": "ApiPlaylists100Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/api/playlists/100",
              "headers": {
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete One Playlist",
            "x-testDescription": "Perform a filtered search for message event data. The response is sorted by descending timestamp."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/playlists/9/albums": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Albums By Playlist",
        "tags": [
          "Playlists"
        ],
        "operationId": "ApiPlaylists9AlbumsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/playlists/9/albums?page=0&size=10"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Albums By Playlist",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/playlists/7/albums": {
      "put": {
        "description": "TODO: Add Description",
        "summary": "Add Albums to Playlist",
        "tags": [
          "Playlists"
        ],
        "operationId": "ApiPlaylists7AlbumsPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "PUT",
              "uri": "/api/playlists/7/albums",
              "headers": {
                "Accept": "application/hal+json;charset=UTF-8",
                "Content-Type": "text/uri-list"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add Albums to Playlist",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/playlists/4/albums/33": {
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Delete Album From Playlist",
        "tags": [
          "Playlists"
        ],
        "operationId": "ApiPlaylists4Albums33Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/api/playlists/4/albums/33",
              "headers": {
                "Accept": "application/hal+json;charset=UTF-8",
                "Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete Album From Playlist",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/roles": {
      "get": {
        "description": "",
        "summary": "Get Roles",
        "tags": [
          "Roles"
        ],
        "operationId": "ApiRolesGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/roles",
              "headers": {
                "Authorization": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJhdWQiOiJTcHJpbmdpZnkgVXNlcnMiLCJqdGkiOiJzcGlyb3NAZ21haWwuY29tIiwic3ViIjoic3Bpcm9zIiwiZXhwIjoxNTE1NjI0NjQwLCJpc3MiOiJjb20uc3JwaW5naWZ5LmthYmFzYWthbGlzIn0.YSkKBDeubYLwt66WPrdlJj4PC1_L9scPNNDegn47odhK5xLKXobw8W61p8y3VdtI9qSfOBzUhYQ6ejXmF3iyZw"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get Roles",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/roles/1": {
      "get": {
        "description": "",
        "summary": "Get One Role",
        "tags": [
          "Roles"
        ],
        "operationId": "ApiRoles1Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/api/roles/1",
              "headers": {
                "Authorization": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJhdWQiOiJTcHJpbmdpZnkgVXNlcnMiLCJqdGkiOiJzcGlyb3NAZ21haWwuY29tIiwic3ViIjoic3Bpcm9zIiwiZXhwIjoxNTE1NjI0NjQwLCJpc3MiOiJjb20uc3JwaW5naWZ5LmthYmFzYWthbGlzIn0.YSkKBDeubYLwt66WPrdlJj4PC1_L9scPNNDegn47odhK5xLKXobw8W61p8y3VdtI9qSfOBzUhYQ6ejXmF3iyZw"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get One Role",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/login": {
      "post": {
        "description": "",
        "summary": "Login",
        "tags": [
          "Misc"
        ],
        "operationId": "ApiLoginPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/api/login",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{ \"username\" : \"admin\",\n\"password\" : \"11111111\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Login",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/sign-up": {
      "post": {
        "description": "",
        "summary": "Sign Up",
        "tags": [
          "Misc"
        ],
        "operationId": "ApiSignUpPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SignUprequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/api/sign-up",
              "headers": {
                "Content-Type": "application/json",
                "Authorization": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJhdWQiOiJTcHJpbmdpZnkgVXNlcnMiLCJqdGkiOiJ6b3VyZG9zQGdtYWlsLmNvbSIsInN1YiI6InBldGVyIiwiZXhwIjoxNTE2Mzg1MTc5LCJpc3MiOiJjb20uc3JwaW5naWZ5LmthYmFzYWthbGlzIn0.-AA31gQ_ehgzdzT67v-AEh6ewXHnZBN3CmkGNMUK9lXnkgTOquxIpHlwlf93TYbtUIFR40cz0na1sikyNULvxA"
              },
              "body": "{\"username\": \"admin2\",\n\"password\": \"11111111\",\n\"passwordConfirm\": \"11111111\",\n\"email\" : \"admin2@gmail.com\"\n}\n"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Sign Up",
            "x-testDescription": ""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "UpdateOnePlaylistrequest": {
      "title": "Update One PlaylistRequest",
      "example": {
        "name": "Top Bulgaria"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "Top Bulgaria",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "LoginRequest": {
      "title": "LoginRequest",
      "example": {
        "username": "admin",
        "password": "11111111"
      },
      "type": "object",
      "properties": {
        "username": {
          "description": "",
          "example": "admin",
          "type": "string"
        },
        "password": {
          "description": "",
          "example": "11111111",
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "SignUprequest": {
      "title": "Sign UpRequest",
      "example": {
        "username": "admin2",
        "password": "11111111",
        "passwordConfirm": "11111111",
        "email": "admin2@gmail.com"
      },
      "type": "object",
      "properties": {
        "username": {
          "description": "",
          "example": "admin2",
          "type": "string"
        },
        "password": {
          "description": "",
          "example": "11111111",
          "type": "string"
        },
        "passwordConfirm": {
          "description": "",
          "example": "11111111",
          "type": "string"
        },
        "email": {
          "description": "",
          "example": "admin2@gmail.com",
          "type": "string"
        }
      },
      "required": [
        "username",
        "password",
        "passwordConfirm",
        "email"
      ]
    },
    "UpdateOneAlbumrequest": {
      "title": "Update One AlbumRequest",
      "example": {
        "title": "Rockstar_Updated",
        "year": "2020"
      },
      "type": "object",
      "properties": {
        "title": {
          "description": "",
          "example": "Rockstar_Updated",
          "type": "string"
        },
        "year": {
          "description": "",
          "example": "2020",
          "type": "string"
        }
      },
      "required": [
        "title",
        "year"
      ]
    },
    "AddOneGenrerequest": {
      "title": "Add One GenreRequest",
      "example": {
        "name": "PsyTrance"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "PsyTrance",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "UpdateOneGenrerequest": {
      "title": "Update One GenreRequest",
      "example": {
        "name": "PsyTrance KOKO"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "PsyTrance KOKO",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "AddArtistrequest": {
      "title": "Add ArtistRequest",
      "example": {
        "name": "Vio-lence",
        "country": "USA"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "Vio-lence",
          "type": "string"
        },
        "country": {
          "description": "",
          "example": "USA",
          "type": "string"
        }
      },
      "required": [
        "name",
        "country"
      ]
    },
    "UpdateArtistrequest": {
      "title": "Update ArtistRequest",
      "example": {
        "name": "Vio-lence _____",
        "country": "USA _____"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "Vio-lence _____",
          "type": "string"
        },
        "country": {
          "description": "",
          "example": "USA _____",
          "type": "string"
        }
      },
      "required": [
        "name",
        "country"
      ]
    },
    "AddOnePlaylistrequest": {
      "title": "Add One PlaylistRequest",
      "example": {
        "name": "Top Albania"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "Top Albania",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "AddOneAlbumrequest": {
      "title": "Add One AlbumRequest",
      "example": {
        "title": "Rockstar",
        "year": "2017"
      },
      "type": "object",
      "properties": {
        "title": {
          "description": "",
          "example": "Rockstar",
          "type": "string"
        },
        "year": {
          "description": "",
          "example": "2017",
          "type": "string"
        }
      },
      "required": [
        "title",
        "year"
      ]
    }
  }
}
